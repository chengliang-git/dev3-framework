server:
  port: 8080
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: enterprise-framework
  
  profiles:
    active: dev
  
  # 数据源配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      url: jdbc:oracle:thin:@localhost:1521:XE
      username: ${ORACLE_USERNAME:framework}
      password: ${ORACLE_PASSWORD:framework123}
      driver-class-name: oracle.jdbc.driver.OracleDriver
      
      # 连接池配置
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      
      # 监控配置
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
      
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: admin123
        reset-enable: false
        allow: 127.0.0.1
  
  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  
  # RabbitMQ配置
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: /
    connection-timeout: 15000
    listener:
      simple:
        acknowledge-mode: manual
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 3000
  
  # Jackson配置
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null

# MyBatis Plus配置
mybatis-plus:
  # 映射文件位置
  mapper-locations: classpath*:/mapper/**/*.xml
  # 实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.enterprise.framework.entity
  configuration:
    # 开启驼峰命名
    map-underscore-to-camel-case: true
    # 开启二级缓存
    cache-enabled: true
    # 日志输出
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      # 主键类型
      id-type: ASSIGN_ID
      # 逻辑删除字段
      logic-delete-field: deleted
      # 逻辑删除值
      logic-delete-value: 1
      # 逻辑未删除值
      logic-not-delete-value: 0

# JWT配置
jwt:
  secret: ${JWT_SECRET:enterprise-framework-jwt-secret-key-2024}
  expiration: 86400000  # 24小时
  header: Authorization
  prefix: Bearer

# Apollo配置中心
apollo:
  meta: ${APOLLO_META:http://localhost:8080}
  bootstrap:
    enabled: true
    eagerLoad:
      enabled: true
    namespaces: application,database,redis,rabbitmq

# Knife4j API文档配置
knife4j:
  enable: true
  setting:
    language: zh_cn
    enable-version: true
    enable-reload-cache-parameter: true
    enable-after-script: true
    enable-filter-multipart-api-method-type: POST
    enable-filter-multipart-apis: false
    enable-request-cache: true
    enable-host: false
    enable-host-text: http://localhost:8080
    enable-home-custom: true
    home-custom-location: classpath:markdown/home.md
  documents:
    - group: 企业框架API
      name: 企业级Spring Boot框架接口文档
      locations: classpath:markdown/*

# 日志配置
logging:
  level:
    com.enterprise.framework: debug
    org.springframework.security: debug
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: logs/enterprise-framework.log
    max-size: 10MB
    max-history: 30

# 框架自定义配置
framework:
  # 安全配置
  security:
    # 不需要认证的路径
    permit-all-paths:
      - /api/auth/login
      - /api/auth/register
      - /druid/**
      - /doc.html
      - /webjars/**
      - /swagger-resources/**
      - /v3/api-docs/**
      - /actuator/**
    # 跨域配置
    cors:
      allowed-origins: "*"
      allowed-methods: "*"
      allowed-headers: "*"
      allow-credentials: true
  
  # 代码生成器配置
  generator:
    author: Enterprise Framework
    package-name: com.enterprise.framework
    table-prefix: t_
    exclude-columns: id,create_time,update_time,deleted
  
  # 文件上传配置
  upload:
    path: ${UPLOAD_PATH:./uploads}
    max-file-size: 10MB
    max-request-size: 100MB
    allowed-extensions: jpg,jpeg,png,gif,bmp,pdf,doc,docx,xls,xlsx,ppt,pptx,txt,zip,rar